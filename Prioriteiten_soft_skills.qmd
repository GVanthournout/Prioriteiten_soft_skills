---
title: "Welke soft skills zijn belangrijk voor operationeel leidinggevenden?"
subtitle: "Verkennend onderzoek bij cursisten van het veiligheidsinstituut aan de AP Hogeschool"
author: 
  - "Gert Vanthournout"
  - "Ellen de Bruyne"
  - "Siham Chaoui"
  - "Michiel Wellens"
  - "Heidi Nevelsteen"
  - "Stefaan Hendrickx"
date: today
title-block-banner: "#6b8ea4"
format:
  html:
    toc: true
    toc-depth: 3
    number-sections: true
    mainfont: Arial
    font-size: smaller
    linestretch: 1.2
    code-line-numbers: true
    embed-resources: true
    
Rendering:
  embed-resources: true

logo: "AP_logo_letters_rgb.png"  
---

```{r}
#| label: Packages
#| include: false
#| warning: false
#| error: false

# Load R-packages from packages file
source("Packages.R")
```

```{r}
#| label: Load data
#| include: false
#| warning: false
#| error: false

# !! Voor ik de data importeerde paste ik kolomnamen aan in het excelbestand

# Data inladen
Data_start <- read_excel(here ("Data_prioriteiringsoefening.xlsx"))

# Omschrijving soft skills inladen
Omschrijving <- read_excel(here ("Omschrijving_soft_skills.xlsx"))

```

```{r}
#| label: Wrangle data prioriteringsoefening
#| include: false
#| warning: false
#| error: false

# Identifier en gegevens prioriteringsoefening selecteren
Data_prioriteit <- Data_start |> 
  select(Id, Prioritering)

# prioritering spreiden over verschillende kolommen
Data_prioriteit <- separate_wider_delim(Data_prioriteit, cols = Prioritering, delim = ";", names = c("Keuze_1", "Keuze_2", "Keuze_3", "Keuze_4", "Keuze_5", "Keuze_6", "Keuze_7", "Keuze_8", "Keuze_9", "Keuze_10", "Keuze_11"))

# overschot weggooien
Data_prioriteit <- Data_prioriteit |> 
  select(-Keuze_11)

# naar long format brengen
Data_prioriteit_long <- Data_prioriteit |> 
  pivot_longer(cols = Keuze_1:Keuze_10, names_to = "Keuze", values_to = "Soft_skill")

# naam soft skill en omschrijving scheiden
Data_prioriteit_long <- separate_wider_delim(Data_prioriteit_long, cols = Soft_skill, delim = "(", names = c("Soft_skill", "Rommel"))

# Keuze numeriek maken
Data_prioriteit_long <- Data_prioriteit_long |>   
  mutate( Keuze_num = case_when ( 
          Keuze == "Keuze_1" ~ 1,
          Keuze == "Keuze_2" ~ 2,
          Keuze == "Keuze_3" ~ 3,
          Keuze == "Keuze_4" ~ 4,
          Keuze == "Keuze_5" ~ 5,
          Keuze == "Keuze_6" ~ 6,
          Keuze == "Keuze_7" ~ 7,
          Keuze == "Keuze_8" ~ 8,
          Keuze == "Keuze_9" ~ 9,
          Keuze == "Keuze_10"~ 10
          ))

# Identifier, naam soft skill en numerieke keuze selecteren
Data_prioriteit_long <- Data_prioriteit_long |> 
  select(Id, Soft_skill, Keuze_num)

# Terug naar het wide format brengen met soft skills als kolmnamen, deelnemers als rijen en prioirteringen als values
Data_prioriteit_clean <- Data_prioriteit_long |> 
  pivot_wider(names_from = Soft_skill, values_from = Keuze_num)

```

```{r}
#| label: Wrangle data meerkeuzevragen & achtergrondkenmerken
#| include: false
#| warning: false
#| error: false

# Identifier en gegevens meerkeuzevragen selecteren
Data_meerkeuze <- Data_start |> 
  select(Id, Coachen: Opvolgen)

# naar long format brengen
Data_meerkeuze_long <- Data_meerkeuze |> 
  pivot_longer(cols = Coachen: Opvolgen, names_to = "Soft_skill", values_to = "Likert")

# Keuze numeriek maken
Data_meerkeuze_long <- Data_meerkeuze_long |>   
  mutate( Score = case_when ( 
          Likert == "Heel belangrijk" ~ 4,
          Likert == "Belangrijk" ~ 3,
          Likert == "Neutraal" ~ 2,
          Likert == "Niet belangrijk" ~ 1,
          Likert == "Helemaal niet belangrijk" ~ 0
          ))

# Identifier en achtergrondkenmerken  selecteren
Data_achtergrond <- Data_start |> 
  select(Id, Missing: Geslacht)
```

```{r}
#| label: define functions
#| include: false
#| warning: false
#| error: false
#| 
Tabel_aantallen <- function(varx){ Data_start |>
  group_by({{varx}}) |>
  summarise( Aantal =n()) |>
  dplyr::mutate (Totaal = round(Aantal/sum(Aantal)*100),
                 Percentage = paste0(round((Aantal/sum(Aantal))*100), "%")) |>
  ungroup()  
}

Staafdiagram_aantallen <- function(dat, varx, ...) {
ggplot(data = dat, aes(x = {{varx}}, y = Totaal)) +
  geom_bar(stat = "identity", fill = Kleuren_num[4]) +
  coord_flip () +
  geom_text(aes(label = Percentage),
            hjust = 1.5,
            color = "white",
            fontface = "bold",
            size = 3) +
  theme_minimal() +
  theme(plot.title.position = "plot",
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        axis.title = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = unit(c(1,2,1,1), "cm")
        ) +
    labs(...) 
}
```

```{r}
#| label: Define colors 
#| include: false
#| warning: false
#| error: false

# Creëren van named vectors voor het kleurenpallet

# Kleurenpallet wanneer categorieën worden aangeduid via cijfers
Kleuren_num <-  c("2020-2021" = "aquamarine3","2021-2022" = "#6b8ea4", "2022-2023" ="#a99e95", "4" = "#6b8ea4", "2023-2024" = "#366785")

```

# Situering

De Veiligheid, gezondheid en milieu Checklist Aannemers (VCA) is een lijst met aandachtspunten en werkmethoden op het gebied van veiligheid en gezondheid. De VCA helpt werknemers en operationeel leidinggevenden in een risicovolle werkomgeving om veiliger en gezonder hun werk te doen. Via een VCA-certificaat tonen bedrijven, leidinggevenden en werknemers aan opdrachtgevers dat ze zich bewust zijn van de risico's die ze lopen tijdens hun werk én dat ze gepaste preventiemaatregelen kunnen nemen. Er bestaat een aparte certificering voor werknemers (VCA Basis) en voor operationeel leidinggevenden (VCA VOL).

In Vlaanderen organiseert Contractor Safety Management vzw de VCA-certificering. De organisatie is zich bewust van een belangrijke leemte in de huidige opleidingen: ze zetten sterk in op vaktechnische kennis, maar ze besteden onvoldoende aandacht aan de soft skills die essentieel zijn voor een veilige werkomgeving.

In het project ***Veiligheid en leiderschap: Soft Skills voor operationeel leidinggevenden*** ontwikkelen het [Veiligheidsinstituut](https://www.ap.be/expertise/veiligheidsinstituut) (VI) en het [Kenniscentrum Onderzoek Levenslang Leren en Innoveren](https://www.ap.be/expertise/veiligheidsinstituut) (OLLI) van de AP Hogeschool samen een meetinstrument om soft skills bij operationeel leidinggevenden in kaart te brengen. Ze baseren zich daarvoor op het bestaande instrument [Kickstart Your Soft Skills](https://kickstart.goleweb.be/nl/node/3619) (KYSS). Het KYSS instrument vraagt werknemers zichzelf in te schatten op zestien soft skills. Het geeft werknemers ook feedback zodat ze zich verder kunnen ontwikkelen. OLLI, VDAB en Groep Intro ontwikkelden het instrument tussen 2018 en 2020 via een ESF-project. Nadien breidde OLLI de vragenlijst met dertien extra skills uit in opdracht van VDAB.

Het KYSS-instrument biedt een goed vertrekpunt, maar bevraagt soft skills los van een specifieke context. Door het instrument verder te concretiseren naar operationeel leidinggeven in de context van veiligheid en risicovolle werkomgevingen, kan het instrument een meer genuanceerde analyse maken. Maar dan is het wel belangrijk dat het de belangrijkste soft skills in deze context in kaart brengt.

# Opzet

Om een idee te krijgen van welke soft skills het werkveld belangijk vindt bij operationeel leidinggevenden in de context van veiligheid en werken in een risicovolle werkomgeving, organiseerden OLLI en VI een bevraging bij cursisten van het veiligheidsinstituut. Daarbij vroegen we deelnemers om:

1.  Voor twaalf soft skills (Tabel 1) aan te geven in welke mate ze deze belangrijk vinden.

2.  Tien Soft skills te rangschikken van belangrijk naar minder belangrijk.

3.  Aan te geven of er volgens hen nog cruciale soft skills voor leidinggevenden ontbraken in onze opsomming van 12 soft skills (Tabel 1).

4.  Een aantal achtergrondkenmerken aan te leveren (Functie, Aantal jaren ervaring, Leeftijd, Geslacht).

Het huidige rapport analyseert de resultaten van deze bevraging.

# Overzicht soft skills

Tabel 1 geeft een overzicht van de twaalf soft skills die we in dit onderzoek bevroegen.

```{r}
#| label: Description soft skills
#| echo: false
#| warning: false
#| error: false

gt(Omschrijving) |> 
  tab_caption(caption = md("**Tabel 1:** Omschrijving van betrokken soft skills"))
```

# Respondentkenmerken

In totaal vulden `r nrow(Data_start)` cursisten de bevraging in. Tabellen 2 t/m 5 tonen de kenmerken van de deelnemers. Uit Tabel 2 blijkt dat 60% van de respondenten de functie van preventieadviseur heeft. Tabel 3 en Tabel 4 tonen dat onze respondenten gelijkmatig verdeeld zijn over de verschillende categorieën voor werkervaring en leeftijd. Tabel 5laat zien dat mannen het grootste deel van onze steekproef vormen.

```{r}
#| label: Select relevant data for function
#| echo: false
#| warning: false
#| error: false

tabel_functie <- Tabel_aantallen(Functie_eenvoudig) |> 
  select(-Totaal)

gt(tabel_functie) |> 
  tab_caption(caption = md("**Tabel 2:** Spreiding van respondenten over functie"))

```

```{r}
#| label: Select relevant data for ervaring
#| echo: false
#| warning: false
#| error: false

tabel_ervaring <- Tabel_aantallen(Ervaring) |> 
  select(-Totaal)

gt(tabel_ervaring) |> 
  tab_caption(caption = md("**Tabel 3:** Spreiding van respondenten over werkervaring"))
```

```{r}
#| label: Select relevant data for Leeftijd
#| echo: false
#| warning: false
#| error: false

tabel_leeftijd <- Tabel_aantallen(Leeftijd) |> 
  select(-Totaal)

gt(tabel_leeftijd) |> 
  tab_caption(caption = md("**Tabel 4:** Spreiding van respondenten over leeftijd"))

```

```{r}
#| label: Select relevant data for geslacht
#| echo: false
#| warning: false
#| error: false

tabel_geslacht <- Tabel_aantallen(Geslacht) |> 
  select(-Totaal)

gt(tabel_geslacht) |> 
  tab_caption(caption = md("**Tabel 5:** Spreiding van respondenten over geslacht"))

```

# Belangrijkheid soft skills

We vroegen deelnemers om voor de twaalf soft skills uit Tabel 1 aan te geven in welke mate deze belangrijk zijn voor operationeel leidinggevenden. Daartoe scoorden respondenten deze soft skills op een vijf puntenschaal (0= Helemaal niet belangrijk, 4 = Heel belangrijk).  We analyseerden de resultaten via *beschrijvende statistieken* en via *diverging barplots*.

## Beschrijvende statistieken

Het *gemiddelde* toont welke soft skills respondenten het belangrijkst vinden. De scores variëren tussen 0 en 4. In Tabel 6 zijn de vaardigheden van hoog naar laag gesorteerd op gemiddelde score. Bovenaan staan soft skills die belangrijker worden ingeschat dan die onderaan. De *standaarddeviatie* geeft de mate van meningsverschil aan: hoe hoger de waarde, hoe groter de verdeeldheid.

Respondenten beschouwen Voorbeeldgedrag stellen, Communiceren, Coachen en Situationeel bewustzijn als de belangrijkste vaardigheden. Voorbeeldgedrag stellen en Coachen vertonen bovendien de kleinste standaarddeviatie, wat wijst op brede consensus. 
Daarentegen scoren Flexibiliteit, Omgaan met diversiteit en Zelfstandig werken lager, hoewel hun gemiddelden nog steeds boven de 3 liggen. De hogere standaarddeviaties bij deze skills duiden op uiteenlopende meningen.

```{r}
#| label: descriptives soft skills
#| echo: false
#| warning: false
#| error: false
Data_meerkeuze_num <- Data_meerkeuze_long |> 
  select(Id, Soft_skill, Score) |> 
  pivot_wider(names_from = Soft_skill, values_from = Score) |> 
  select(-Id)
  
gemiddelde_soft_skills <- round(colMeans(Data_meerkeuze_num, na.rm = T),2)  
gemiddelde_soft_skills <- gemiddelde_soft_skills |> as_tibble() 

sd_soft_skills <- round(sapply(Data_meerkeuze_num, sd, na.rm = T),2)
sd_soft_skills <- sd_soft_skills |> as_tibble() 

median_soft_skills <- round(sapply(Data_meerkeuze_num, median, na.rm = T),2)
median_soft_skills <- median_soft_skills |> as_tibble()

mad_soft_skills <- round(sapply(Data_meerkeuze_num, mad, na.rm = T),2)
mad_soft_skills <- mad_soft_skills |> as_tibble()

Overzicht_soft_skill <- Data_meerkeuze_long |> 
  distinct(Soft_skill)

descriptives_soft_skills <- bind_cols(Overzicht_soft_skill, gemiddelde_soft_skills, sd_soft_skills, median_soft_skills, mad_soft_skills) 

colnames(descriptives_soft_skills) <- c("Soft skill", "Gemiddelde", "Standaarddeviatie", "Mediaan", "MAD")  

descriptives_soft_skills |> 
  select(`Soft skill`:Standaarddeviatie) |> 
  arrange(desc(Gemiddelde)) |> 
  gt() |> 
  tab_caption(caption = md("**Tabel 6:** Beschrijvende statistieken soft skills"))
```

```{r}
#| label: boxplots soft skills top 4
#| echo: false
#| include: false
#| warning: false
#| error: false
#| fig-cap: "Fig 1b: Violin plot for 4 soft skills with highest mean scores"

Data_meerkeuze_long |>
  filter(Soft_skill == "Voorbeeldgedrag_stellen" | Soft_skill == "Communiceren" | Soft_skill == "Coachen"|  Soft_skill == "Bewust_zijn_situatie") |> 
  ggplot (mapping = aes(x = Soft_skill, y = Score)) +
  geom_violin (fill= "deepskyblue4", show.legend = F) +
  # geom_boxplot(fill = "White", alpha = 0.1) +
  stat_summary( fun = mean, geom = "point", color = "darkorange", size = 3) +
  theme_minimal() +
  theme(plot.title.position = "plot",
        legend.position = "none",
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        axis.title.x = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.ticks.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = margin (t = 1, 
                       r = 1,
                       b = 1,
                       l = 1, 
                       unit = "cm")) +
  scale_y_continuous(limits = c(0,4), breaks = seq(0,4,1)) +
  labs(x = "", title = "Violin plot per soft skill ", subtitle = "Soft skills met hoogste gemiddelde scores") +
  coord_flip()
```

```{r}
#| label: boxplots soft skills middle 4
#| include: false
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "Fig 1b: Violin plot for 4 soft skills with middle mean scores"

Data_meerkeuze_long |>
  filter(Soft_skill == "Samenwerken" | Soft_skill == "Team_aansturen" | Soft_skill == "Zorgvuldig_werken"|  Soft_skill == "Plannen_organiseren") |> 
  ggplot (mapping = aes(x = Soft_skill, y = Score)) +
  geom_violin(fill= "deepskyblue4", show.legend = F) +
  # geom_boxplot(fill = "White", alpha = 0.1) +
  stat_summary(fun = mean, geom = "point", color = "darkorange", size = 3) +
  theme_minimal() +
  theme(plot.title.position = "plot",
        legend.position = "none",
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        axis.title.x = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.ticks.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = margin (t = 1, 
                       r = 1,
                       b = 1,
                       l = 1, 
                       unit = "cm")) +
  scale_y_continuous(limits = c(0,4), breaks = seq(0,4,1)) +
  labs(x = "", title = "Violin plot per soft skill ", subtitle = "Soft skills middelste gemiddelde score") +
  coord_flip()
```

```{r}
#| label: boxplots soft skills bottom 4
#| echo: false
#| include: false
#| warning: false
#| error: false
#| fig-cap: "Fig 1c: Violin plot for 4 soft skills with lowest mean scores"

Data_meerkeuze_long |>
  filter(Soft_skill == "Opvolgen" | Soft_skill == "Flexibel_opstellen"| Soft_skill == "Omgaan_diversiteit" | Soft_skill == "Zelfstandig_werken") |> 
  ggplot (mapping = aes(x = Soft_skill, y = Score)) +
  geom_violin(fill= "deepskyblue4", show.legend = F) +
  # geom_boxplot(fill = "White", alpha = 0.1) +
  stat_summary(fun = mean, geom = "point", color = "darkorange", size = 3) +
  theme_minimal() +
  theme(plot.title.position = "plot",
        legend.position = "none",
        panel.background = element_blank(),
        panel.grid.major = element_blank(), 
        axis.title.x = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.ticks.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = margin (t = 1, 
                       r = 1,
                       b = 1,
                       l = 1, 
                       unit = "cm")) +
  scale_y_continuous(limits = c(0,4), breaks = seq(0,4,1)) +
  labs(x = "", title = "Violin plot per soft skill ", subtitle = "Soft skills laagste gemiddelde score") +
  coord_flip()

```

## Diverging barplot

*Divirging barplots* (Figuur 1) visualiseren per soft skill het percentage respondenten per antwoordoptie. Positieve antwoordopties (‘Belangrijk’ en ‘Heel belangrijk’) worden links van een denkbeeldige verticale as weergegeven in blauwtinten; minder positieve antwoordopties (‘Neutraal’ en ‘Niet belangrijk’) staan rechts in grijs en oranje. Niemand koos voor ‘Helemaal niet belangrijk.’

Coachen wordt unaniem positief beoordeeld (Figuur 1). Slechts 2% beoordeelt Voorbeeldgedrag stellen als neutraal. Zelfstandig werken krijgt de minste ‘Heel belangrijk’-scores en de meeste ‘Niet belangrijk’-stemmen. Opvallend is dat bijna 30% neutraal staat tegenover Plannen en organiseren als skill voor operationeel leidinggevenden.

Figuur 1 bevestigt het belang van Coachen, Communiceren, Voorbeeldgedrag stellen en situationeel bewustzijn als belangrijkste skills voor operationeel leidinggevenden.


```{r}
#| label: data wrangling diverging barchart soft skills
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "Figuur 1: Diverging barplot voor 12 soft skills"


Data_aantallen <- Data_meerkeuze_long %>%
  group_by(Soft_skill, Likert) %>%
  summarize(Aantal = n()) %>%
  mutate(Verhouding = Aantal/sum(Aantal)) %>%
  mutate(Percentage = round(Aantal/sum(Aantal)*100,0)) %>%
  ungroup()  %>%
  mutate(Percentage_label = percent(Verhouding, accuracy = 1))

#Data_aantallen_versus <- Data_aantallen %>%
 # filter (Waarde != 'Neutraal')

#Data_aantallen_neutraal <- Data_aantallen %>%
  # filter (Waarde == 'Neutraal')

Data_aantallen_diverging <- Data_aantallen %>%
  mutate(Verhouding = if_else(Likert %in% c("Neutraal", "Niet belangrijk"), Verhouding, -Verhouding)) %>% 
  mutate(Percentage_label = percent(Verhouding, accuracy = 1))

Diverging_good_labels <- Data_aantallen_diverging %>%
  mutate(Percentage_label = abs(Verhouding)) %>% 
  mutate(Percentage_label = percent(Percentage_label, accuracy = 1))

Diverging_volgorde <- Diverging_good_labels %>% 
  mutate(Likert = fct_relevel(Likert, "Belangrijk", "Heel belangrijk", "Neutraal", "Niet belangrijk"), Likert = fct_rev(Likert)) 

```

```{r}
#| label: diverging barchart soft skills
#| echo: false
#| warning: false
#| error: false

Diverging_volgorde %>%
  ggplot(aes(x = Soft_skill, 
             y = Verhouding,
             fill = Likert)) +
  geom_col( color = "white", linewidth = 0.8) +
  geom_text(aes(label = Percentage_label),
            position = position_stack(vjust = 0.5),
            color = "white",
            fontface = "bold", size=2.8) +
  scale_x_discrete() +
  coord_flip()+
  scale_fill_manual(breaks = c("Heel belangrijk", "Belangrijk", "Neutraal", "Niet belangrijk"), values = c(
                      "Niet belangrijk" = "darkorange3",
                      "Neutraal" = "grey65",
                      "Belangrijk" = "deepskyblue",
                      "Heel belangrijk" = "deepskyblue4"
                    )) + 
  labs(title = "Hoe belangrijk ervaren cursisten specifieke soft skills?",
       x = NULL,
       fill = NULL, caption = "Figuur 1: Diverging barplot belangrijkheid soft skills") +
  theme_minimal() +
  theme(plot.title.position = "plot",
    axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        panel.grid = element_blank(),
        axis.text.y = element_text(colour = "#68676c",  size = 10),
        title = element_text(colour = "#68676c", face = "bold", size = 12),
        legend.position = "top",
        plot.caption = element_text(hjust = 0)
    )


```

# Ranking van soft skills

In de eerste oefening scoorden cursisten het belang van 12 soft skills voor de rol van operationeel leidinggevenden. Cursisten hoefden bij deze oefening geen rekening te houden met een rangschikking tussen soft skills. In de vervolgoefening moesten ze een duidelijke rangorde aangeven.  Deelnemers rangschikten tien soft skills van meest belangrijk (1) tot minst belangrijk (10). Via *rangschikkingscores* en via een *stacked barplot* krijgen we inzicht in de rangorde die cursisten aan de soft skills gaven.

## Rangschikkingscores

We maakten voor elke soft skill de som van de scores die alle deelnemers gaven. Een lagere *rangschikkingsscore* duidt op een hogere positie in de rangschikkingslijst. Voor het gemak rangschikten we de gegevens in Tabel 7 van belangrijk naar minder belangrijk. Soft skills met scores die in elkaars buurt liggen, zoals Samenwerken (219) en Team aansturen (222) kunnen we beschouwen als even belangrijk.

Uit de bevraging blijkt dat de soft skills Communiceren, Situationeel bewustzijn en Voorbeeldgedrag stellen de top 3 uitmaken.Communiceren steekt daar met een duidelijk lagere rangschikkingsscore bovenuit. 

Onderaan rangschikken cursisten Omgaan met diversiteit en Zelfstandigheid als minst belangrijke skills voor operationeel leidinggevenden.

```{r}
#| label: Ranking soft skills
#| echo: false
#| warning: false
#| error: false

Rangschikking_soft_skills <-  Data_prioriteit_clean |>
  pivot_longer(cols = `Situationeel bewustzijn ` :`Zelfstandigheid ` , names_to = "Skill", values_to = "Prioriteit")|>   dplyr::group_by(Skill) |> 
  summarise(Rangschikkingscore = sum(Prioriteit)) |> 
  ungroup()  

#Data_prioriteit_clean_2 <- Data_prioriteit_clean |> 
 # select(-Id)

# skills <- colnames(Data_prioriteit_clean_2)

# gemiddelde_rangschikking <- round(colMeans(Data_prioriteit_clean_2, na.rm = T),2)
# gemiddelde_rangschikking <- gemiddelde_rangschikking |> as_tibble() 

# gemiddelde_rangschikking <- bind_cols(skills, gemiddelde_rangschikking)

#colnames(gemiddelde_rangschikking) <- c("Skill", "Gemiddelde")

#sd_rangschikking <- round(sapply(Data_prioriteit_clean_2, sd, na.rm = T),2)
#sd_rangschikking <- sd_rangschikking |> as_tibble() 

#sd_rangschikking <- bind_cols(skills, sd_rangschikking)

#colnames(sd_rangschikking) <- c("Skill", "SD")

#ranking_skills <- left_join( Rangschikking_soft_skills, gemiddelde_rangschikking, by = join_by(Skill) ) 
#ranking_skills <- left_join( ranking_skills, sd_rangschikking, by = join_by(Skill) )

Rangschikking_soft_skills <- Rangschikking_soft_skills |> 
  arrange(Rangschikkingscore)

gt(Rangschikking_soft_skills) |> 
  tab_caption(caption = md("**Tabel 7:** Rangschikkingscore soft skills"))

```

## Stacked barplot

Een rangschikkingscore alleen geeft geen duidelijk beeld over de mate waarin cursisten verschillen in hun rangschikking. Een *stacked barplot* kan ons hierbij helpen. Die visualiseert het percentage cursisten dat een specifieke ranking aan een soft skill geeft. De som van alle balken komt zo op 100% uit. De blauwe balken samen geven het percentage cursisten weer dat een skill in zijn of haar top 3 van belangrijkste skills plaatst. De oranje balken samen tonen het aandeel cursisten dat een skill in haar of zijn top 3 van minst belangrijke skills opnam.

De resultaten tonen dat 1 op 4 cursisten Voorbeeld gedrag stellen als belangrijkste skill identificeerden voor operationeel leidinggevenden. Communiceren springt eruit: 70% plaatst deze skill in de top drie. Voorbeeldgedrag stellen en Situationeel bewustzijn volgen met respectievelijk 58% en 54%.

Onderaan observeren we dat cursisten Zelfstandigheid het vaakst als minst belangrijke skill naar voor schuiven (35%) en dat de skill ook bij 70% in de top 3 van minst belangrijke skills staat. In mindere mate zien we een zelfde trend voor Omgaan met diversiteit (28% en 58%).

```{r}
#| label: Bar chart soft skills
#| echo: false
#| warning: false
#| error: false

Aantal_soft_skills <-  Data_prioriteit_clean |>
  pivot_longer(cols = `Situationeel bewustzijn ` :`Zelfstandigheid ` , names_to = "Skill", values_to = "Prioriteit")


Aantal_soft_skills$Prioriteit_cat <- as.factor(Aantal_soft_skills$Prioriteit)

Tabel_rangschikking <- Aantal_soft_skills |> 
  select(Skill, Prioriteit_cat) |> 
  group_by(Skill, Prioriteit_cat) |> 
  summarize(Aantal = n()) |> 
  mutate(Verhouding = Aantal/sum(Aantal))  |> 
  mutate(Percentage = round(Aantal/sum(Aantal)*100,0)) |>  
  ungroup()  |> 
  mutate(Percentage_label = percent(Verhouding, accuracy = 1))

Tabel_rangschikking <- Tabel_rangschikking |> 
  left_join(Rangschikking_soft_skills, by = "Skill" )

ggplot(Tabel_rangschikking, aes(x = Percentage, y = reorder(Skill, desc(Rangschikkingscore)), fill = Prioriteit_cat))  + 
  geom_bar(stat = "identity", color = "white", linewidth = 1) +
  scale_fill_manual(values = c("deepskyblue4", "deepskyblue2", "deepskyblue", "grey40",  "grey55", "grey70","grey80", "#ffA630", "#F17720", "#c85200" ), labels = c("1" = "Eerste keuze", "2"= "", "3" ="", "4" = "", "5" = "", "6" = "", "7" = "", "8" = "", "9" = "", "10" = "Laatste keuze")) +
  geom_text(aes(label = Percentage_label),
            position = position_stack(vjust = 0.5),
            color = "white",
            fontface = "bold", size=2.8) +
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.title.position = "plot",
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(), 
    axis.text.y = element_text(colour = "#68676c",  size = 10),
    title = element_text(colour = "#68676c", face = "bold", size = 12),
    legend.title = element_blank(),
    legend.text.position = "top",
    legend.position = "top",
    legend.box = "horizontal",
    plot.caption = element_text(hjust = 0)
  ) +
  labs(title ="Welke skills vinden cursisten belangrijk?", caption = "Figuur 2: Stacked barplot prioriteiten soft skills") +
  guides(fill = guide_legend(nrow = 1, reverse = TRUE))
  


```

# Ontbrekende soft skills

Voor onze bevraging vertrokken we hoofdzakelijk vanuit bestaande soft skills in het KYSS-instrument. We lieten deelnemers aan de bevraging echter ook de mogelijkheid om ontbrekende soft skill naar voren te schuiven. Veertien cursisten maakten gebruik van deze mogelijkheid. Tabel 8 geeft een overzicht van de suggesties die cursisten maakten.

```{r}
#| label: Suggestions soft skills
#| echo: false
#| warning: false
#| error: false

Data_achtergrond |> 
  select(Suggesties = Missing) |> 
  na.omit() |> 
  gt() |> 
  tab_caption(caption = md("**Tabel 8:** Overzicht suggesties soft skills"))
```

Er komen minstens twee skills meermaals voor bij de suggesties van cursisten. Een eerste skill heeft te maken met *Vragen en geven van feedback*. De suggesties van cursisten tonen aan dat deze skill onvoldoende vervat zit in skills als coachen, communiceren of Samenwerken en apart aan bod moet komen. Daarnaast komt ook de skill *Empathy of Inlevingsvermogen* als suggestie aan bod. Deze skill benadrukt de sociaal-emotionele vaardigheden die een operationeel leidinggevende volgens cursisten dient te bezitten.

# Conclusies

We voerden een verkennend onderzoek uit bij `r nrow(Data_start)` cursisten van het Veiligheidsinstituut en we vroegen hen naar het belang van verschillende soft skills in de rol van operationeel leidinggevenden. Uit de bevraging blijkt dat cursisten het cruciaal vinden dat operationeel leidinggevenden in staat zijn om te communiceren en voorbeeldgedrag te stellen. Daarnaast moeten operationeel leidinggevenden zich bewust zijn van hun omgeving zodat ze pro-actief op risico's kunnen inspelen. Cursisten beoordeelden alle twaalf soft skills in onze bevraging als relevant. De vaardigheden die het minst belangrijk werden geacht, waren het omgaan met diversiteit en het zelfstandig kunnen werken. Naast de skills die reeds deel uitmaakten van de bevraging vestigden cursisten de aandacht op twee extra vaardigheden: Feedback geven en zich Empathisch kunnen inleven.

Onderzoekers bij OLLI en het VI zullen de gegevens uit deze bevraging gebruiken om te beslissen welke soft skills ze zullen opnemen in het meetinstrument dat ze ontwikkelen in het kader van de cursus VCA voor operationeel leidinggevenden. De volgende stappen in dit project zijn het ontwikkelen van het daadwerkelijke meetinstrument en het testen ervan bij operationeel leidinggevenden.
